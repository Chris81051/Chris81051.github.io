<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chris&#39;s Lab</title>
  
  <subtitle>If you obey all the rules,you miss all the fun.</subtitle>
  <link href="https://chris81051.github.io/atom.xml" rel="self"/>
  
  <link href="https://chris81051.github.io/"/>
  <updated>2023-04-24T07:25:46.670Z</updated>
  <id>https://chris81051.github.io/</id>
  
  <author>
    <name>Chris</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[LeetCode] 169. Majority Element</title>
    <link href="https://chris81051.github.io/2023/04/23/LeetCode-169-Majority-Element-Java-Python/"/>
    <id>https://chris81051.github.io/2023/04/23/LeetCode-169-Majority-Element-Java-Python/</id>
    <published>2023-04-23T09:37:37.000Z</published>
    <updated>2023-04-24T07:25:46.670Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>　　這題目的邏輯是找出陣列中出現次數過半的元素，這裡有使用一層 for 迴圈遍歷整個陣列後，用 HashMap 來操作存儲查找，Map 時間可以視為常數時間，時間複雜度可以達到 <code>O(n)</code>，這裡有 JAVA 和 Python 的寫法。</p><h3 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h3><blockquote><p>Given an array <strong>nums</strong> of size <strong>n</strong>, return <em>the majority element.</em><br>The majority element is the element that appears more than <strong>⌊n &#x2F; 2⌋</strong> times. You may assume that the majority element always exists in the array.</p></blockquote><blockquote><p>給定一個陣列 <strong>nums</strong> 大小為 <strong>n</strong>，回傳這個出現多次的元素。<br>這個出現多次的元素，出現超過半數。你可以認為這個出現多次的元素總是在這個陣列裡。</p></blockquote><p>題目連結：<a href="https://leetcode.com/problems/majority-element/">https://leetcode.com/problems/majority-element/</a></p><h3 id="題目限制"><a href="#題目限制" class="headerlink" title="題目限制"></a>題目限制</h3><p><code>n == nums.length</code><br><code>1 &lt;= n &lt;= 5 * 104</code><br><code>109 &lt;= nums[i] &lt;= 109</code></p><h3 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [<span class="number">3</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">Output: <span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>]</span><br><span class="line">Output: <span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="思路-amp-筆記"><a href="#思路-amp-筆記" class="headerlink" title="思路&amp;筆記"></a>思路&amp;筆記</h3><blockquote><ul><li>遍歷陣列裡所有的元素</li><li>把元素和次數存在 Map 裡 ( key：value )</li><li>當下已有的元素，把 key 的次數 ( value ) +1</li><li>把 Map 裡次數 (value) 大於陣列一半的 key 回傳</li></ul></blockquote><h3 id="JAVA-實現"><a href="#JAVA-實現" class="headerlink" title="JAVA 實現"></a>JAVA 實現</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">YourClassNameHere</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">      </span><br><span class="line">        Map&lt;Integer, Integer&gt; isMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer, Integer&gt;();</span><br><span class="line">        <span class="type">int</span> ret=<span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// foreach 寫法，類型 int 遍歷後把 nums 裡的每個值丟進 num</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> num: nums) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!isMap.containsKey(num)) <span class="comment">// 如果沒找到指定的 key</span></span><br><span class="line">                isMap.put(num, <span class="number">1</span>); <span class="comment">// (key:value) 添加進 map</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                isMap.put(num, isMap.get(num)+<span class="number">1</span>); <span class="comment">// 找到指定的 key 的 value 後 +1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (isMap.get(num)&gt;nums.length/<span class="number">2</span>) &#123; <span class="comment">// 如果當下的 key 的 value 大於陣列長度的一半</span></span><br><span class="line">                ret = num;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JAVA-進階實現"><a href="#JAVA-進階實現" class="headerlink" title="JAVA 進階實現"></a>JAVA 進階實現</h3><p>筆者還在學習中，參考了在討論區裡網友一致認同的超簡單解法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">majorityElement</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line"></span><br><span class="line">        Arrays.sort(nums); <span class="comment">// 重新排序 (小到大)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> nums[nums.length / <span class="number">2</span>]; <span class="comment">// 因重新排序後，獲取陣列中間的元素，一定是超過半數的元素</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Python-實現"><a href="#Python-實現" class="headerlink" title="Python 實現"></a>Python 實現</h3><p>使用了和 Java 一樣的邏輯執行，換成 Python 的寫法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">majorityElement</span>(<span class="params">self, nums</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type nums: List[int]</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        dic = &#123;&#125; <span class="comment"># 空字典</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 字典裡找尋 key (索引n)，如果找不到 key 的話，把陣列裡的索引 n 添加進字典當 key</span></span><br><span class="line"><span class="comment"># 把次數 0+1 添加進去當 value</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums:</span><br><span class="line">            dic[n] = dic.get(n, <span class="number">0</span>) + <span class="number">1</span> <span class="comment"># &#123;索引n:0+1&#125;</span></span><br><span class="line">            <span class="keyword">if</span> dic[n] &gt; <span class="built_in">len</span>(nums)//<span class="number">2</span>: <span class="comment"># 判斷當前的 key 的值，有無大於陣列的一半</span></span><br><span class="line">                <span class="keyword">return</span> n <span class="comment"># 回傳當前的 key</span></span><br></pre></td></tr></table></figure><h3 id="成績"><a href="#成績" class="headerlink" title="成績"></a>成績</h3><table><thead><tr><th>Language</th><th>Runtime</th><th>Memory</th></tr></thead><tbody><tr><td>Java</td><td>20 ms</td><td>48.5MB</td></tr><tr><td>Python</td><td>131 ms</td><td>14.9MB</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">這題目的邏輯是找出陣列中出現次數過半的元素</summary>
    
    
    
    <category term="LeetCode" scheme="https://chris81051.github.io/categories/LeetCode/"/>
    
    <category term="Array" scheme="https://chris81051.github.io/categories/LeetCode/Array/"/>
    
    <category term="Easy" scheme="https://chris81051.github.io/categories/LeetCode/Array/Easy/"/>
    
    
  </entry>
  
  <entry>
    <title>[LeetCode] 121. Best Time to Buy and Sell Stock</title>
    <link href="https://chris81051.github.io/2023/04/18/LeetCode-121-Best-Time-to-Buy-and-Sell-Stock-Java-Python/"/>
    <id>https://chris81051.github.io/2023/04/18/LeetCode-121-Best-Time-to-Buy-and-Sell-Stock-Java-Python/</id>
    <published>2023-04-18T08:51:34.000Z</published>
    <updated>2023-04-23T05:57:08.977Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>　　究竟何時才是買賣股票的最好時機呢? 這題邏輯很生活化，就是把一個陣列內所有的價格遍歷完，低買高賣後把最大的差價回傳出來，這題使用了單迴圈遍歷陣列裡所有的價格，遍歷裡也是常數的時間操作，時間複雜度推算可以達到 <code>O(n)</code>，這篇有 Java 和 Python 的寫法。</p><h3 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h3><blockquote><p>You are given an array <strong>prices</strong> where <strong>prices[i]</strong> is the price of a given stock on the <strong>ith</strong> day.<br>You want to maximize your profit by choosing a <strong>single day</strong> to buy one stock and choosing a <strong>different day in the future</strong> to sell that stock.<br>Return <em>the maximum profit you can achieve from this transaction</em>. If you cannot achieve any profit, return <strong>0</strong>.</p></blockquote><blockquote><p>給你一個價格陣列 <strong>prices</strong> ，<strong>prices[i]</strong> 是取得一個股票在第 i 天的價格。<br>你想要最大化你的利潤，藉著選擇一天去買一張股票和選擇在未來不同天裡去賣掉那張股票。<br>你可以從這個交易回傳最大化的利潤。如果你無法達到任何利潤，就回傳 0。</p></blockquote><p>題目連結：<a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock/">https://leetcode.com/problems/best-time-to-buy-and-sell-stock/</a></p><h3 id="題目限制"><a href="#題目限制" class="headerlink" title="題目限制"></a>題目限制</h3><p>注意：不能在第二天買入後第一天賣出，必須先買後賣。</p><p><code>1 &lt;= prices.length &lt;= 105</code><br><code>0 &lt;= prices[i] &lt;= 104</code></p><h3 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: prices = [<span class="number">7</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">4</span>]</span><br><span class="line">Output: <span class="number">5</span></span><br><span class="line">Explanation: Buy on day <span class="number">2</span> (price = <span class="number">1</span>) and sell on day <span class="number">5</span> (price = <span class="number">6</span>), profit = <span class="number">6</span>-<span class="number">1</span> = <span class="number">5.</span></span><br><span class="line">Note that buying on day <span class="number">2</span> and selling on day <span class="number">1</span> is not allowed because you must buy before you sell.</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: prices = [<span class="number">7</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">1</span>]</span><br><span class="line">Output: <span class="number">0</span></span><br><span class="line">Explanation: In <span class="built_in">this</span> <span class="keyword">case</span>, no transactions are done and the <span class="type">max</span> <span class="variable">profit</span> <span class="operator">=</span> <span class="number">0.</span></span><br></pre></td></tr></table></figure><h3 id="思路-amp-筆記"><a href="#思路-amp-筆記" class="headerlink" title="思路&amp;筆記"></a>思路&amp;筆記</h3><blockquote><ul><li>判斷陣列中值的大小，把更小的值存起來</li><li>兩數的相差 &#x3D; 把當前的索引的值 - 上一個索引的值</li><li>比較前一個值，將比較大的值存入</li></ul></blockquote><h3 id="JAVA-實現"><a href="#JAVA-實現" class="headerlink" title="JAVA 實現"></a>JAVA 實現</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxProfit</span><span class="params">(<span class="type">int</span>[] prices)</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> Integer.MAX_VALUE;  <span class="comment">// 整數類型中的最大值 2³¹</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">op</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">pist</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; prices.length; i++)&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 找到陣列中最小的值</span></span><br><span class="line">            <span class="keyword">if</span>(prices[i] &lt; min)&#123;</span><br><span class="line">                min = prices[i]; <span class="comment">// 前一個索引的值(最小的值)</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 兩數的相差 = 當前索引的值 - 前一個索引的值(最小的值)</span></span><br><span class="line">            pist = prices[i] - min;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 比較前一個值，將比較大的值存入</span></span><br><span class="line">            <span class="keyword">if</span>(op &lt; pist)&#123;  </span><br><span class="line">                op = pist;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> op;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Python-實現"><a href="#Python-實現" class="headerlink" title="Python 實現"></a>Python 實現</h3><p>使用了和 Java 一樣的邏輯執行，換成 Python 的寫法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">maxProfit</span>(<span class="params">self, prices: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line"></span><br><span class="line">        <span class="built_in">min</span> = prices[<span class="number">0</span>]; <span class="comment"># 預設索引0</span></span><br><span class="line">        op = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 從索引1開始練遍歷</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(prices)):</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 找出最小值</span></span><br><span class="line">            <span class="keyword">if</span> prices[i] &lt; <span class="built_in">min</span> :</span><br><span class="line">                <span class="built_in">min</span> = prices[i]</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 把兩值的相差存入</span></span><br><span class="line">            <span class="keyword">elif</span>((prices[i] - <span class="built_in">min</span>) &gt; op): <span class="comment"># 比較前一個值</span></span><br><span class="line">                op = prices[i] - <span class="built_in">min</span> <span class="comment"># 將比較大的值存入</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> op;</span><br></pre></td></tr></table></figure><h3 id="成績"><a href="#成績" class="headerlink" title="成績"></a>成績</h3><table><thead><tr><th>Language</th><th>Runtime</th><th>Memory</th></tr></thead><tbody><tr><td>Java</td><td>2ms</td><td>59.4MB</td></tr><tr><td>Python</td><td>984 ms</td><td>25  MB</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">究竟何時才是買賣股票的最好時機呢?</summary>
    
    
    
    <category term="LeetCode" scheme="https://chris81051.github.io/categories/LeetCode/"/>
    
    <category term="Array" scheme="https://chris81051.github.io/categories/LeetCode/Array/"/>
    
    <category term="Easy" scheme="https://chris81051.github.io/categories/LeetCode/Array/Easy/"/>
    
    
  </entry>
  
  <entry>
    <title>[LeetCode] 1. Two Sum</title>
    <link href="https://chris81051.github.io/2023/04/14/LeetCode-1-Two-Sum-Java-Python/"/>
    <id>https://chris81051.github.io/2023/04/14/LeetCode-1-Two-Sum-Java-Python/</id>
    <published>2023-04-14T07:37:19.000Z</published>
    <updated>2023-04-18T09:12:21.299Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><u>前言</u></h2><p>　　我想這題是正要開始寫 LeetCode 的人，大部分的人的第一題吧，這題是個基本題算在 easy 的題型，看到題目直接就會想到使用雙迴圈的寫法，不過雙迴圈時間複雜度只有達到 <code>O(N^2)</code> 不那麼理想，如果比較資深的工程師會用 HashMap 做處理，這時時間複雜度可以達到 <code>N(1)</code>，這篇有 Java 和 Python 的寫法。</p><h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a><u>題目</u></h2><blockquote><p>Given an array of integers <strong>nums</strong> and an integer <strong>target</strong>, return indices of the two numbers such that they add up to <strong>nums</strong>.</p><p>You may assume that each input would have exactly one solution, and you may not use the same element twice.</p><p>You can return the answer in any order.</p></blockquote><blockquote><p>給定一個整數陣列 <strong>nums</strong> 和一個整數結果 <strong>target</strong>，陣列中會有兩個元素加起來等於整數結果 <strong>target</strong>，回傳這兩個元素的位置。</p><p>你可能假設每個輸入只會對應一個答案，而且你不能使用同樣的元素兩次</p><p>你可以回傳任何順序的答案。</p></blockquote><p>題目連結：<a href="https://leetcode.com/problems/two-sum/">https://leetcode.com/problems/two-sum/</a></p><h2 id="題目限制"><a href="#題目限制" class="headerlink" title="題目限制"></a><u>題目限制</u></h2><p>同樣的元素不能使用兩次</p><p><code>2 &lt;= nums.length &lt;= 104</code><br><code>109 &lt;= nums[i] &lt;= 109</code><br><code>109 &lt;= target &lt;= 109</code></p><h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a><u>範例</u></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [<span class="number">2</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">15</span>], target = <span class="number">9</span></span><br><span class="line">Output: [<span class="number">0</span>,<span class="number">1</span>]</span><br><span class="line">Explanation: Because nums[<span class="number">0</span>] + nums[<span class="number">1</span>] == <span class="number">9</span>, we <span class="keyword">return</span> [<span class="number">0</span>, <span class="number">1</span>].</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>], target = <span class="number">6</span></span><br><span class="line">Output: [<span class="number">1</span>,<span class="number">2</span>]</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums = [<span class="number">3</span>,<span class="number">3</span>], target = <span class="number">6</span></span><br><span class="line">Output: [<span class="number">0</span>,<span class="number">1</span>]</span><br></pre></td></tr></table></figure><h2 id="思路-amp-筆記"><a href="#思路-amp-筆記" class="headerlink" title="思路&amp;筆記"></a><u>思路&amp;筆記</u></h2><blockquote><p>使用暴力的解法：雙迴圈</p><ol><li><p>迴圈 1 取得第一個索引，迴圈 2 取得第二個索引</p></li><li><p>但迴圈 2 的循環起始需要做個 i+1，目的是元素不要重複到</p></li><li><p>當迴圈 2 的索引都循環完後，迴圈 1 的索引會換到下一個索引，以此類推</p></li><li><p>直到兩個索引的值加起來，等於目標整數 target，就把當下的索引回傳出來</p></li></ol></blockquote><h2 id="JAVA-初階實現"><a href="#JAVA-初階實現" class="headerlink" title="JAVA 初階實現"></a><u>JAVA 初階實現</u></h2><p>使用暴力解法：雙迴圈</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i+<span class="number">1</span>; j &lt; nums.length; j++)&#123; <span class="comment">// 元素不要重複到</span></span><br><span class="line">                <span class="keyword">if</span>(nums[i] + nums[j] == target)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;i, j&#125;; <span class="comment">// 回傳索引</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;&#125;; <span class="comment">// 當找不到符合條件的組合時，回傳一個空的整數陣列</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JAVA-進階實現"><a href="#JAVA-進階實現" class="headerlink" title="JAVA 進階實現"></a><u>JAVA 進階實現</u></h2><p>筆者還在學習中，參考了討論區裡網友的解法。</p><blockquote><p>這裡有使用 HashMap 存資料。</p><ul><li>遍歷時用 target 減掉當下索引的值，可以得出另一個整數。(這個就是我們要相加起來的另一個整數，沒有的話代表不是兩數的合)</li><li>因第一次判斷 Map 本來就是空的一定不成功，所以把已判斷過的元素跟索引存進 Map 裡。(這裡要顛倒存，因為之後判斷時要取索引，索引放在值的地方)</li><li>之後遍歷第二次時，判斷 <code>.containsKey()</code> 搜尋 Map 裡有無 key，這時 true 進入判斷式</li><li><code>.get()</code> 取值 (剛顛倒存入的索引) → 0</li><li>i 則是當下的索引 → 1</li><li>最後把兩個索引存入 <code>new int[]</code> 陣列中 <code>[0, 1]</code></li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        Map&lt;Integer, Integer&gt; numToIndex = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="comment">// 判斷鍵是否存在 Map</span></span><br><span class="line">            <span class="keyword">if</span> (numToIndex.containsKey(target - nums[i])) &#123; <span class="comment">// 目標整數 - 索引 1 的值</span></span><br><span class="line">                <span class="comment">// 回傳兩個索引</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;numToIndex.get(target - nums[i]), i&#125;; <span class="comment">// numToIndex 裡的&quot;值&quot;是索引,當前 i 是索引</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 把前面的資料添加進 Map </span></span><br><span class="line">            numToIndex.put(nums[i], i);  <span class="comment">// &#123;2,0&#125; (注意這邊是顛倒的存進去)</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[] <span class="number">0</span>; <span class="comment">// 仍未找到符合要求的元素，則返回一個空的 int[] 陣列</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Python-初階實現"><a href="#Python-初階實現" class="headerlink" title="Python 初階實現"></a><u>Python 初階實現</u></h2><p>使用了和 Java 一樣的邏輯執行，換成 Python 的寫法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">twoSum</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], target: <span class="built_in">int</span></span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>, <span class="built_in">len</span>(nums)): <span class="comment"># 索引從第2個開始</span></span><br><span class="line">                <span class="keyword">if</span> i != j <span class="keyword">and</span> nums[i] + nums[j] == target: <span class="comment"># 索引不要重複且索引值相加</span></span><br><span class="line">                    <span class="keyword">return</span> [i, j]</span><br><span class="line"><span class="keyword">return</span> []</span><br></pre></td></tr></table></figure><h2 id="Python-進階實現"><a href="#Python-進階實現" class="headerlink" title="Python 進階實現"></a><u>Python 進階實現</u></h2><p>筆者還在學習中，參考了討論區裡網友的解法。<br>使用了和 Java 一樣的邏輯執行，換成 Python 的寫法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">twoSum</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], target: <span class="built_in">int</span></span>) -&gt; <span class="type">List</span>[<span class="built_in">int</span>]:</span><br><span class="line">        numToIndex = &#123;&#125; <span class="comment"># 字典</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(nums)):</span><br><span class="line">            <span class="comment"># 判斷鍵是否存在 Map</span></span><br><span class="line">            <span class="keyword">if</span> target - nums[i] <span class="keyword">in</span> numToIndex: <span class="comment"># 目標整數 - 索引 1 的值</span></span><br><span class="line">                <span class="keyword">return</span> [numToIndex[target - nums[i]], i] </span><br><span class="line">            <span class="comment"># 把前面的資料添加進字典</span></span><br><span class="line">            numToIndex[nums[i]] = i <span class="comment"># 鍵 nums[i] = 值 i</span></span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="成績"><a href="#成績" class="headerlink" title="成績"></a><u>成績</u></h2><table><thead><tr><th>Language</th><th>Algorithm</th><th>Runtime</th><th>Memory</th></tr></thead><tbody><tr><td>Java</td><td>初階實現</td><td>85 ms</td><td>42.7MB</td></tr><tr><td>Python</td><td>初階實現</td><td>4297 ms</td><td>14.9MB</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">我想這題是正要開始寫 LeetCode 的人，大部分的人的第一題吧，這題是個基本題算在 easy 的題型。</summary>
    
    
    
    <category term="LeetCode" scheme="https://chris81051.github.io/categories/LeetCode/"/>
    
    <category term="Array" scheme="https://chris81051.github.io/categories/LeetCode/Array/"/>
    
    <category term="Easy" scheme="https://chris81051.github.io/categories/LeetCode/Array/Easy/"/>
    
    
  </entry>
  
  <entry>
    <title>[教學] Vue element UI + Spring Boot 表單加圖片一起傳至後端</title>
    <link href="https://chris81051.github.io/2023/04/04/Vue-element-Spring-Boot-picture-form-base64-upload/"/>
    <id>https://chris81051.github.io/2023/04/04/Vue-element-Spring-Boot-picture-form-base64-upload/</id>
    <published>2023-04-04T14:59:34.000Z</published>
    <updated>2023-04-05T12:18:46.145Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><u>前言</u></h2><p>在 Web 專案中多多少少都會遇到要把表單資料傳至後端儲存的功能，可是外加圖片檔案後就變得不那麼單純，這邊想分享是把表單資料加上圖片檔案，放在同一個物件內傳送到後端做保存。</p><h2 id="問題敘述"><a href="#問題敘述" class="headerlink" title="問題敘述"></a><u>問題敘述</u></h2><p>把網頁中的彈跳視窗內的表單與圖片檔案，以 base64 格式一起傳至後端，前端以虛擬靜態路徑顯示圖片。</p><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a><u>效果展示</u></h2><p><img src="https://drive.google.com/uc?export=view&id=1DqCD7K-b-E3u_rmEeEa8VfKyxSdlNK_E" alt="upload-photos" title="upload-photos"></p><h2 id="邏輯思路"><a href="#邏輯思路" class="headerlink" title="邏輯思路"></a><u>邏輯思路</u></h2><ol><li>前端取得表單和圖片的 base64 格式，傳至後端。</li><li>後端取得表單內容和解析 base64 格式，轉換成圖片jpg 格式。</li><li>把圖片保存至本機，製作圖片的虛擬靜態路徑，保存在資料庫裡。</li></ol><h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a><u>Vue</u></h2><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a><u>HTML</u></h3><p>這裡是使用 element UI 的上傳檔案模板</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">  httpRequest：圖片覆蓋默認的上傳行為</span></span><br><span class="line"><span class="comment">  beforeUpload：上傳前判斷圖片大小、類型</span></span><br><span class="line"><span class="comment">  handleExceed：上傳超出數量提醒</span></span><br><span class="line"><span class="comment">  handleChange：改變檔案樣子</span></span><br><span class="line"><span class="comment">  :limit：上傳最大數量</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;上傳照片&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;img&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;100px&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;editForm.avatar&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-upload</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">&quot;upload-demo&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">ref</span>=<span class="string">&quot;upload&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">action</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">accept</span>=<span class="string">&quot;image/jpeg, image/png&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:http-request</span>=<span class="string">&quot;httpRequest&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">:before-upload</span>=<span class="string">&quot;beforeUpload&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">:on-exceed</span>=<span class="string">&quot;handleExceed&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">:on-change</span>=<span class="string">&quot;handleChange&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:limit</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:data</span>=<span class="string">&quot;editForm&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">slot</span>=<span class="string">&quot;trigger&quot;</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>選取照片<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>=<span class="string">&quot;tip&quot;</span> <span class="attr">class</span>=<span class="string">&quot;el-upload__tip&quot;</span>&gt;</span>只能上傳 jepg、png 檔案，且不超過 5 MB<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a><u>JavaScript</u></h3><p>這裡是前端的邏輯處理，把圖片檔案轉成 Base64 格式。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">fileList</span>: [], <span class="comment">// 存放圖片檔案</span></span><br><span class="line">  &#125;;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 圖片覆蓋默認的上傳的行為，可以自定義上傳的實現，將上傳的檔案依次添加到 fileList 陣列中，支持多個檔案 </span></span><br><span class="line">  <span class="title function_">httpRequest</span>(<span class="params">option</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fileList</span>.<span class="title function_">push</span>(option)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 圖片上傳前處理 </span></span><br><span class="line">  <span class="title function_">beforeUpload</span>(<span class="params">file</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> fileSize = file.<span class="property">size</span>; <span class="comment">// 用 size 屬性，判斷檔案大小不能超過 5MB</span></span><br><span class="line">    <span class="keyword">let</span> fileName = file.<span class="property">name</span>; <span class="comment">// 用檔案名 name 後綴，判斷檔案類型</span></span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">FIVE_M</span> = <span class="number">5</span> * <span class="number">1024</span> * <span class="number">1024</span>; <span class="comment">// 5MB</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 大於 5MB 不允許上傳 </span></span><br><span class="line">    <span class="keyword">if</span> (fileSize &gt; <span class="variable constant_">FIVE_M</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&quot;最大上傳 5 MB&quot;</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 允許的圖片類型 (正規表達式)</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="regexp">/\.(jpg|jpeg|png|JPG|PNG)$/</span>.<span class="title function_">test</span>(fileName)) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&quot;只能上傳 jpg、png 格式!&quot;</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 檔案數量過多時提醒 </span></span><br><span class="line">  <span class="title function_">handleExceed</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;最多支持 1 個照片上傳&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 把圖片轉換成 Base64</span></span><br><span class="line">  <span class="title function_">handleChange</span>(<span class="params">file</span>) &#123;</span><br><span class="line">    <span class="comment">// raw 是前端放置原始資料的類檔案物件 Blob (用於圖片、檔案)</span></span><br><span class="line">    <span class="comment">// 有這個物件裡的東西， Js 才能讀寫二進位資料的檔案</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getBase64</span>(file.<span class="property">raw</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123; </span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">editForm</span>.<span class="property">avatar</span> = res; <span class="comment">// 轉好的資料放進物件裡</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 轉換邏輯</span></span><br><span class="line">  <span class="title function_">getBase64</span>(<span class="params">file</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span> (<span class="params">resolve, reject</span>) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">let</span> imgResult = <span class="string">&quot;&quot;</span>; <span class="comment">// 裝 Base64 字串的容器</span></span><br><span class="line">      <span class="keyword">let</span> reader = <span class="keyword">new</span> <span class="title class_">FileReader</span>(); <span class="comment">// 讀取檔案方法</span></span><br><span class="line">      reader.<span class="title function_">readAsDataURL</span>(file); <span class="comment">// 讀取圖片後，編碼成 Base64 格式</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 將讀取的結果放到變數</span></span><br><span class="line">      reader.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        imgResult = reader.<span class="property">result</span>; </span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 失敗傳錯誤訊息</span></span><br><span class="line">      reader.<span class="property">onerror</span> = <span class="keyword">function</span> (<span class="params">error</span>) &#123; </span><br><span class="line">        <span class="title function_">reject</span>(error);</span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 成功傳出去</span></span><br><span class="line">      reader.<span class="property">onloadend</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123; </span><br><span class="line">        <span class="title function_">resolve</span>(imgResult);</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="Spring-Boot"><a href="#Spring-Boot" class="headerlink" title="Spring Boot"></a><u>Spring Boot</u></h2><h3 id="Entity"><a href="#Entity" class="headerlink" title="Entity"></a><u>Entity</u></h3><p>這裡繼承了一個我專案中的父類實體，與這個教學毫無關係，這裡想表達我的實體屬性是 avatar，其他屬性略。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ManageUser</span> <span class="keyword">extends</span> <span class="title class_">BaseEntity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String avatar; <span class="comment">// 使用者圖示</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Config"><a href="#Config" class="headerlink" title="Config"></a><u>Config</u></h3><p>這邊很重要，瀏覽器是看不懂你本機電腦裡的圖片路徑的，要瀏覽器顯示你的圖片的話，一定要配置這個在 Spring 裡。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span> <span class="comment">// 配置在 Spring 裡</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyWebConfigurer</span> <span class="keyword">extends</span> <span class="title class_">WebMvcConfigurationSupport</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">// 覆蓋重寫 </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 對檔案的路徑進行配置，建立一個靜態虛擬路徑 /api/file/**</span></span><br><span class="line"><span class="comment">         * 即前端只要在&lt;img src=&quot;/Path/picName.jpg&quot; /&gt; 便可以直接引用圖片</span></span><br><span class="line"><span class="comment">         * 這是圖片的物理路徑 &quot;file:/ + 本地圖片的實體地址&quot;</span></span><br><span class="line"><span class="comment">         * 這邊要注意，最後放圖片的資料夾後要加一個斜線，斜線後面才是你的圖片名稱</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        registry.addResourceHandler(<span class="string">&quot;/api/file/**&quot;</span>).addResourceLocations(<span class="string">&quot;file:&quot;</span> + <span class="string">&quot;D:/xxx/src/main/resources/static/img/&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">super</span>.addResourceHandlers(registry);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Utils"><a href="#Utils" class="headerlink" title="Utils"></a><u>Utils</u></h3><p>工具類來處理前端傳來的物件，將 base64 格式轉換成 jpg 圖片格式，並保存圖片在本機，把虛擬靜態路徑回傳。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span> <span class="comment">// log</span></span><br><span class="line"><span class="meta">@Component</span> <span class="comment">// 注入到 spring 容器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ImgUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 檔案隨機取名(取得隨機 uuid)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getUUID</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 把 uuid 裡的 &quot;-&quot; 換成 &quot;&quot; 空</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> UUID.randomUUID().toString().replaceAll(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> uuid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取得 ManageUser 中的 Avatar 的 base64</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getAvatarBase64</span><span class="params">(String base64)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">imgUrl</span> <span class="operator">=</span> ImgUtils.handleUploadPicture(base64); <span class="comment">// 轉換邏輯後取得虛擬靜態 url</span></span><br><span class="line">        log.info(<span class="string">&quot;圖片url：&quot;</span> + imgUrl);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> imgUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 轉換邏輯</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">handleUploadPicture</span><span class="params">(String base64)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 虛擬靜態位置</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">fileUrl</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">// 最後重組的實體路徑</span></span><br><span class="line">        String lastFilePath;</span><br><span class="line">        <span class="comment">// 實體資料夾目錄 (最後放圖片的資料夾後要加一個斜線，斜線後面才是你的圖片名稱)</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">uploadFolder</span> <span class="operator">=</span> <span class="string">&quot;D:/xxx/src/main/resources/static/img/&quot;</span>;</span><br><span class="line">        <span class="comment">// 虛擬路徑位址</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">apiUrl</span> <span class="operator">=</span> <span class="string">&quot;http://localhost:8081/api/file/&quot;</span>;</span><br><span class="line">        <span class="comment">// 副檔名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">suffix</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 判斷前端來的附檔名為何</span></span><br><span class="line">        <span class="comment">// .startsWith() 方法判斷字符串，是否從字符串 data:image/jpg 開始</span></span><br><span class="line">        <span class="keyword">if</span> (base64.startsWith(<span class="string">&quot;data:image/jpg&quot;</span>)) &#123;</span><br><span class="line">            suffix = <span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (base64.startsWith(<span class="string">&quot;data:image/jpeg&quot;</span>)) &#123;</span><br><span class="line">            suffix = <span class="string">&quot;.jpeg&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (base64.startsWith(<span class="string">&quot;data:image/png&quot;</span>)) &#123;</span><br><span class="line">            suffix = <span class="string">&quot;.png&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 新的圖片檔名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">newFileName</span> <span class="operator">=</span> ImgUtils.getUUID() + suffix; <span class="comment">// uuid 編碼 + 後戳 .jpg</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判斷有無實體資料夾</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">folder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(uploadFolder);</span><br><span class="line">        <span class="keyword">if</span> (!folder.exists()) &#123;</span><br><span class="line">            folder.mkdirs(); <span class="comment">// 創建資料夾</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 檔案 IO 流：該類用來創建一個檔案並向檔案中寫資料</span></span><br><span class="line">        <span class="type">FileOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">BASE64Decoder</span> <span class="variable">decoder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BASE64Decoder</span>(); <span class="comment">// base64 解碼方法</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            lastFilePath = uploadFolder + File.separator + newFileName; <span class="comment">// 實體位置 + 系統目錄中的間隔符 + 新的圖片檔名</span></span><br><span class="line">            out = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(lastFilePath); <span class="comment">// 寫到檔案 IO 流裡</span></span><br><span class="line">            <span class="type">byte</span>[] decoderBytes = decoder.decodeBuffer(base64.split(<span class="string">&quot;,&quot;</span>)[<span class="number">1</span>]); <span class="comment">// 前端 base64 資料解碼</span></span><br><span class="line">            out.write(decoderBytes); <span class="comment">// 寫進檔案 IO 流裡</span></span><br><span class="line">            fileUrl = apiUrl + newFileName; <span class="comment">// 虛擬靜態路徑 + 新的圖片檔名</span></span><br><span class="line">            log.info(<span class="string">&quot;虛擬靜態路徑：&quot;</span> + fileUrl);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (out != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    out.flush(); <span class="comment">// 將位元組強制寫入</span></span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    out.close(); <span class="comment">// 關掉流</span></span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fileUrl; <span class="comment">// 回傳虛擬靜態位置</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a><u>Service</u></h3><p>Spring Boot 業務的介面類 (由 Controller 來引用)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ManageUserService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;ManageUser&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 新增使用者圖示</span></span><br><span class="line">    ManageUser <span class="title function_">UserAvatarInfoSave</span><span class="params">(ManageUser manageUser)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ServiceImpl"><a href="#ServiceImpl" class="headerlink" title="ServiceImpl"></a><u>ServiceImpl</u></h3><p>Spring Boot 業務的實現類 (由業務的介面類來管理)<br>這裡主要的工作是 Controller 收到前端的 manageUser 物件了，現在要把 manageUser 物件裡的 Avatar (Base64格式)，拿出來給上面寫好的工具類處理，解析轉換完後把他丟回 manageUser 物件裡。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span> <span class="comment">// log</span></span><br><span class="line"><span class="meta">@Service</span> <span class="comment">// 注入到 spring 容器 (標記為 Service 層的 class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ManageUserServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;ManageUserMapper, ManageUser&gt; <span class="keyword">implements</span> <span class="title class_">ManageUserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 處理 Avatar 工具類</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ImgUtils imgUtils;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 處理 Avatar</span></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">// 覆蓋重寫</span></span><br><span class="line">    <span class="keyword">public</span> ManageUser <span class="title function_">UserAvatarInfoSave</span><span class="params">(ManageUser manageUser)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 取得前端傳來的 Avatar 的 base64</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">avatar</span> <span class="operator">=</span> manageUser.getAvatar();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 取得工具類處理好的 url</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">imgUrl</span> <span class="operator">=</span> imgUtils.getAvatarBase64(avatar);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加到 manageUser 物件裡</span></span><br><span class="line">        manageUser.setAvatar(imgUrl);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> manageUser;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a><u>Controller</u></h3><p>Controller 接收到前端傳來的資料物件後，使用業務的介面類，來引用業務的實現類，去調用工具類處理 Avatar，處理完在把整個 manageUser 物件存進資料庫裡。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span> <span class="comment">// 是 @ResponseBody 和 @Controller 的組合註解，處理 http 請求</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/manage/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ManageUserController</span> <span class="keyword">extends</span> <span class="title class_">BaseController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 新增(創建新的用戶)</span></span><br><span class="line">    <span class="comment">// @Validated 驗證實體參數、@RequestBody 因放在 body 裡，是使用 json 格式，但只能用 POST 傳遞物件</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">save</span><span class="params">(<span class="meta">@Validated</span> <span class="meta">@RequestBody</span> ManageUser manageUser)</span>&#123; </span><br><span class="line"></span><br><span class="line">        <span class="comment">// 新增使用者圖示</span></span><br><span class="line">        manageUserService.UserAvatarInfoSave(manageUser);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用 MyBatis Plus 的 .save() 函數新增至資料庫(insert)</span></span><br><span class="line">        manageUserService.save(manageUser);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Result.succ(manageUser); <span class="comment">// 回傳給前端 (統一結果類 Result)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a><u>結語</u></h2><p>這邊盡可能提供詳細的方法給各位參考，筆者也還在努力學習中，寫的並不是非常好，可能有哪些地方邏輯可以再加強或者再優化，也不吝嗇被指教，感謝各位的觀看。</p>]]></content>
    
    
    <summary type="html">把網頁中彈跳視窗內的表單與圖片檔案，以 base64 格式一起傳至後端，前端以虛擬靜態路徑顯示圖片。</summary>
    
    
    
    <category term="Spring Boot" scheme="https://chris81051.github.io/categories/Spring-Boot/"/>
    
    
  </entry>
  
  <entry>
    <title>[教學] Hexo Next 主題加入 DISQUS 留言板</title>
    <link href="https://chris81051.github.io/2022/11/23/tutorial-Hexo-Next-theme-join-Disqus-message-board/"/>
    <id>https://chris81051.github.io/2022/11/23/tutorial-Hexo-Next-theme-join-Disqus-message-board/</id>
    <published>2022-11-23T06:37:45.000Z</published>
    <updated>2023-04-05T07:34:13.015Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><u>前言</u></h2><p>這裡附的是 Hexo Next 主題的簡單教學，可能今後 DISQUS 網頁會改版，操作流程可能會換位置，但邏輯大概是一樣的。<br>各位可以在左邊的目錄選擇自己想要看的資訊跳轉。</p><h2 id="DISQUS-端註冊"><a href="#DISQUS-端註冊" class="headerlink" title="DISQUS 端註冊"></a><u>DISQUS 端註冊</u></h2><p>官方網站右上角註冊：<a href="https://disqus.com/">https://disqus.com/</a><br><img src="https://drive.google.com/uc?export=view&id=1z2EtteMCYdGR6myL7G91y1cgn09BrhDP" alt="註冊" title="註冊"><br>可使用 google 帳號連動註冊。<br><img src="https://drive.google.com/uc?export=view&id=13CUJ1iavYaCjcCloTVe2kJPY3pj6AQK6" alt="帳號註冊" title="帳號註冊"></p><h2 id="選擇應用"><a href="#選擇應用" class="headerlink" title="選擇應用"></a><u>選擇應用</u></h2><p>接下來會跳至選擇頁面，我們想要製作應用在網站上，點選 I want to install Disqus on my site<br><img src="https://drive.google.com/uc?export=view&id=1PeHGGfWfUwvNlZwTVl9hj_FT4QQLTRqs" alt="選擇" title="選擇"><br>這先填寫簡單的資料，之後可以在編輯裡填仔細一點，可是要注意的地方是 Website Name 是要跟 Hexo 做連結的，假如像筆者一樣輸入空格，disqus 會自動轉換成 <code>&quot;-&quot;</code> 槓符號。<br>(備註：Website Name 之後可以修改)<br><img src="https://drive.google.com/uc?export=view&id=1cS2GpvpTDoUVR1iuMpnHJDOT9E1jgjCH" alt="填寫" title="填寫"><br>填完後會跳轉至付費方案選擇，我們選擇最底下的 Basic 免費方案。<br><img src="https://drive.google.com/uc?export=view&id=1uCpFrY5S06LFk4pxNRlH_3AXUemoNveb" alt="方案選擇" title="方案選擇"></p><h2 id="設定應用"><a href="#設定應用" class="headerlink" title="設定應用"></a><u>設定應用</u></h2><p>這裡會發現沒有 Hexo 平台的選項<br>我們選擇最底下的 I don’t see my platform listed, install manually with Universal Code.<br><img src="https://drive.google.com/uc?export=view&id=1MBvMZU_7OPhyuhBmhKZ8ayL-plBngSB4" alt="選擇平台" title="選擇平台"><br>之後會跳到設定流程，左上角的位置會在第二項的第二個 Install Instructions，這個部分是要我們把 DISQUS 配置在網站裡，但可以先跳過， Hexo 有套件包可以自動幫我們配置好。<br><img src="https://drive.google.com/uc?export=view&id=1hR21amfPc2Ep2aQ2QVjbMFk--am1hqAu" alt="流程" title="流程"><br>把細部設定填的更完整。<br><img src="https://drive.google.com/uc?export=view&id=1HqeXg_3nWPzTMHAtDEy_mLJOrrmLzz82" alt="設定" title="設定"><br>最後一項 Setup Moderation 是你的留言審核設定。<br><img src="https://drive.google.com/uc?export=view&id=1h2B29Zf6UciowzUQKLpT5fy8ptcPuYih" alt="審核" title="審核"></p><h2 id="Hexo-端設定"><a href="#Hexo-端設定" class="headerlink" title="Hexo 端設定"></a><u>Hexo 端設定</u></h2><p>在 Hexo Next 主題設定檔 <code>_config.yml</code> 找到 disqus。<br>目錄：<code>/themes/next/_config.yml</code><br>設定完留言板就能用了!</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Disqus 留言板功能</span></span><br><span class="line">disqus:</span><br><span class="line">  enable: true <span class="comment"># 開啟</span></span><br><span class="line">  shortname: <span class="built_in">Test-Web</span><span class="literal">-Side</span> <span class="comment"># 輸入剛創建的網站名(輸入空格會轉成 &quot;-&quot; 槓符號)</span></span><br><span class="line">  count: true <span class="comment"># 決定是否要顯示文章的留言數</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></table></figure><h2 id="把評論關閉-點讚功能"><a href="#把評論關閉-點讚功能" class="headerlink" title="把評論關閉(點讚功能)"></a><u>把評論關閉(點讚功能)</u></h2><p>點讚功能長這樣<br><img src="https://drive.google.com/uc?export=view&id=1gkTacB8sV2BKtiJZQWOkrPjzRYfxCsYI" alt="點讚功能" title="點讚功能"><br>關閉方法：選擇你的應用 -&gt; 點選 Reactions -&gt; 網頁最底下點選 Trun Reactions off<br><img src="https://drive.google.com/uc?export=view&id=17WNjGnMyUzPik2ewKJxQ3UIZCp3MazQX" alt="Reactions" title="Reactions"><br>點選 Yes, Turn Reactions off<br><img src="https://drive.google.com/uc?export=view&id=1YJ0EWq6WnWalNtCZXIjieMQRJuoodvks" alt="關閉" title="關閉"></p><h2 id="留言者規範關閉"><a href="#留言者規範關閉" class="headerlink" title="留言者規範關閉"></a><u>留言者規範關閉</u></h2><p>規範長這樣<br><img src="https://drive.google.com/uc?export=view&id=1syvbDHsnJQtbFVOdryh_jM-qC0ZSufF_" alt="規範" title="規範"><br>關閉方法：選擇你的應用 -&gt; 點選 General -&gt; 設定三四步驟為空白<br>等於不要顯示出規範<br><img src="https://drive.google.com/uc?export=view&id=1DsN_Ypje4Wf6EQb-bTH2LKuZVHgzykoW" alt="關閉規範" title="關閉規範"></p><h2 id="調整介面語言"><a href="#調整介面語言" class="headerlink" title="調整介面語言"></a><u>調整介面語言</u></h2><p>調整方法：選擇你的應用 -&gt; 點選 General -&gt; 設定 Language(Taiwan)<br><img src="https://drive.google.com/uc?export=view&id=1LuQJeCdlV5uPjgnDPF2zmUmnYTLyeb1d" alt="調整介面語言" title="調整語言"></p><h2 id="當下頁面關閉留言功能"><a href="#當下頁面關閉留言功能" class="headerlink" title="當下頁面關閉留言功能"></a><u>當下頁面關閉留言功能</u></h2><p>在頁面的表頭裡設定</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">comments: false <span class="comment"># 在文章的表頭裡設定</span></span><br></pre></td></tr></table></figure><h2 id="留言管理"><a href="#留言管理" class="headerlink" title="留言管理"></a><u>留言管理</u></h2><p>官方網站右上角點 Admin<br><img src="https://drive.google.com/uc?export=view&id=13wQqWND3hnXTsnHPQUGlksA-YSKB69aK" alt="管理" title="管理"><br>點選 Moderate Comments<br><img src="https://drive.google.com/uc?export=view&id=12rGedmeSrMEuG5w8Tq7rnfd8TQrBNqHZ" alt="管理" title="管理"><br>點選 Approved 後可以看到下方顯示了留言訊息<br><img src="https://drive.google.com/uc?export=view&id=1LrWwCM2e8hZ1nY-I1dQY2-Km8x0F7Ley" alt="管理" title="管理"></p><h2 id="顯示效果"><a href="#顯示效果" class="headerlink" title="顯示效果"></a><u>顯示效果</u></h2><p><img src="https://drive.google.com/uc?export=view&id=1ycgjhIKoW-YQBBD22yc4-3DhAyMNRB8-" alt="最終" title="最終"></p><h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a><u>結語</u></h2><p>DISQUS 對於筆者來說功能相當強大，有很多附加功能等等，但是用過後發現，對於不同社交媒體帳號的登入，整合的似乎不是很完整，其他登入按鈕如同虛設，點進去後還是要到 DISQUS 官方網站創建帳號才能留言，另外留言的通知只能在留言管理發現，無法很立即的索取到通知，以上是發現到的優缺點，假如有任何問題也歡迎來信或留言跟我說。</p>]]></content>
    
    
    <summary type="html">這裡附的是 Hexo Next 主題的簡單教學，可能今後 DISQUS 網頁會改版，操作流程可能會換位置，但邏輯大概是一樣的。</summary>
    
    
    
    <category term="Hexo" scheme="https://chris81051.github.io/categories/Hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>[教學] 架站 Hexo 遇到 ERROR Try running: rm -rf node_modules &amp;&amp; npm install --force</title>
    <link href="https://chris81051.github.io/2022/04/28/%E6%95%99%E5%AD%B8-%E6%9E%B6%E7%AB%99-Hexo-%E9%81%87%E5%88%B0-ERROR-Try-running-rm-rf-node-modules-npm-install-force/"/>
    <id>https://chris81051.github.io/2022/04/28/%E6%95%99%E5%AD%B8-%E6%9E%B6%E7%AB%99-Hexo-%E9%81%87%E5%88%B0-ERROR-Try-running-rm-rf-node-modules-npm-install-force/</id>
    <published>2022-04-28T15:06:50.000Z</published>
    <updated>2022-11-30T03:48:01.740Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>架站 Hexo 遇到 <code>ERROR Try running: &#39;rm -rf node_modules &amp;&amp; npm install --force’</code></p><h3 id="環境卸載乾淨"><a href="#環境卸載乾淨" class="headerlink" title="環境卸載乾淨"></a>環境卸載乾淨</h3><p>先完全卸載乾淨 node.js，重新安裝 node.js，通常在官方網站下載的 node.js 都是最新版，不用擔心版本問題。請參考：<a href="https://www.796t.com/post/bGllbQ==.html" title="如何從Windows完全刪除node.js">乾淨移除 node.js</a></p><h3 id="安裝-Hexo"><a href="#安裝-Hexo" class="headerlink" title="安裝 Hexo"></a>安裝 Hexo</h3><p>在命令提示字元(系統管理員)安裝 Hexo，輸入</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">-g</span> <span class="string">hexo-cli</span>  <span class="comment"># Hexo 官方提供</span></span><br></pre></td></tr></table></figure><h3 id="查看安裝完成"><a href="#查看安裝完成" class="headerlink" title="查看安裝完成"></a>查看安裝完成</h3><p>走完上述兩個步驟後，可以查詢看看電腦裡是否有安裝了 node.js 和 Hexo ，在命令提示字元裡輸入</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">node.js</span> <span class="string">-v</span> <span class="comment"># 查看版本號 </span></span><br><span class="line"><span class="string">hexo</span> <span class="string">-v</span> <span class="comment"># 查看版本號</span></span><br></pre></td></tr></table></figure><p>​有查詢到代表成功安裝在電腦裡了</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">C:\Windows\system32&gt;node</span> <span class="string">-v</span></span><br><span class="line"><span class="string">v16.14.2</span></span><br><span class="line"></span><br><span class="line"><span class="string">C:\Windows\system32&gt;hexo</span> <span class="string">-v</span></span><br><span class="line"><span class="attr">hexo-cli:</span> <span class="number">4.3</span><span class="number">.0</span></span><br><span class="line"><span class="attr">os:</span> <span class="string">win32</span> <span class="number">10.0</span><span class="number">.19043</span></span><br><span class="line"><span class="attr">node:</span> <span class="number">16.14</span><span class="number">.2</span></span><br><span class="line"><span class="attr">v8:</span> <span class="number">9.4</span><span class="number">.146</span><span class="number">.24</span><span class="string">-node.20</span></span><br><span class="line"><span class="attr">uv:</span> <span class="number">1.43</span><span class="number">.0</span></span><br><span class="line"><span class="attr">zlib:</span> <span class="number">1.2</span><span class="number">.11</span></span><br><span class="line"><span class="attr">brotli:</span> <span class="number">1.0</span><span class="number">.9</span></span><br><span class="line"><span class="attr">ares:</span> <span class="number">1.18</span><span class="number">.1</span></span><br><span class="line"><span class="attr">modules:</span> <span class="number">93</span></span><br><span class="line"><span class="attr">nghttp2:</span> <span class="number">1.45</span><span class="number">.1</span></span><br><span class="line"><span class="attr">napi:</span> <span class="number">8</span></span><br><span class="line"><span class="attr">llhttp:</span> <span class="number">6.0</span><span class="number">.4</span></span><br><span class="line"><span class="attr">openssl:</span> <span class="number">1.1</span><span class="string">.1n+quic</span></span><br><span class="line"><span class="attr">cldr:</span> <span class="number">40.0</span></span><br><span class="line"><span class="attr">icu:</span> <span class="number">70.1</span></span><br><span class="line"><span class="attr">tz:</span> <span class="string">2021a3</span></span><br><span class="line"><span class="attr">unicode:</span> <span class="number">14.0</span></span><br><span class="line"><span class="attr">ngtcp2:</span> <span class="number">0.1</span><span class="number">.0</span><span class="string">-DEV</span></span><br><span class="line"><span class="attr">nghttp3:</span> <span class="number">0.1</span><span class="number">.0</span><span class="string">-DEV</span></span><br></pre></td></tr></table></figure><h3 id="創建-Hexo-專案資料夾"><a href="#創建-Hexo-專案資料夾" class="headerlink" title="創建 Hexo 專案資料夾"></a>創建 Hexo 專案資料夾</h3><p>移至你想要放專案的目錄下，用命令提示字元(系統管理員)創建 Hexo 專案資料夾，輸入</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">hexo</span> <span class="string">init</span> <span class="string">&lt;自行取名資料夾名稱&gt;</span> </span><br></pre></td></tr></table></figure><p>沒意外的話命令提示字元(系統管理員)上會顯示</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">INFO</span>  <span class="string">Cloning</span> <span class="string">hexo-starter</span> <span class="string">https://github.com/hexojs/hexo-starter.git</span>  <span class="comment"># 從git上clone下來Hexo</span></span><br><span class="line"><span class="string">INFO</span>  <span class="string">Install</span> <span class="string">dependencies</span>  <span class="comment"># 檢查權限</span></span><br><span class="line"><span class="string">INFO</span>  <span class="string">Start</span> <span class="string">blogging</span> <span class="string">with</span> <span class="string">Hexo!</span>  <span class="comment"># 可以開始使用你的部落格了</span></span><br></pre></td></tr></table></figure><p>你的目錄下會有一個你取名的 Hexo 專案資料夾了!<br>最後再試試看在令提示字元(系統管理員)發布一篇文章，輸入</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">hexo</span> <span class="string">new</span> <span class="string">&#x27;我的第一篇部落格文章&#x27;</span> </span><br></pre></td></tr></table></figure><h3 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h3><p>​成功後會顯示</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">INFO</span>  <span class="string">Validating</span> <span class="string">config</span></span><br><span class="line"><span class="attr">INFO  Created:</span> <span class="string">C:\thisischris\isHexo\source\_posts\我的第一篇部落格文章.md</span></span><br></pre></td></tr></table></figure><p>文章會儲存在專案裡的 <code>source</code> 裡的 <code>_posts</code> 資料夾裡</p>]]></content>
    
    
    <summary type="html">架站 Hexo 遇到 ERROR Try running： &#39;rm -rf node_modules &amp;&amp; npm install --force’</summary>
    
    
    
    <category term="Hexo" scheme="https://chris81051.github.io/categories/Hexo/"/>
    
    
  </entry>
  
</feed>
